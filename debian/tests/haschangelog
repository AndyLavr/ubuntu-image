#!/usr/bin/python3

"""Test if associated PR has a changelog entry for the changes."""

import os
import re
import requests
import sys
import json


URL_TEMPLATE = \
    'https://api.github.com/repos/CanonicalLtd/ubuntu-image/pulls/{}'
TRIVIAL_LABEL = 'trivial'


# When the test is being run as part of a GH pull request, the infra sets the
# UPSTREAM_PULL_REQUEST envirnoment variable to the PR number.  This is needed
# as otherwise there's no easy way to guess which pull request is being
# referenced
pr_number = os.environ.get('UPSTREAM_PULL_REQUEST')
if not pr_number:
    # Skip the test if we're not running in a git environment.
    print('Skipping test, not ran as part of a pull request.')
    sys.exit(0)

api_data = requests.get(URL_TEMPLATE.format(pr_number)).text
pull = json.loads(api_data)
if 'labels' not in pull:
    print('Skipping test, no valid pull request for branch.')
    print('Got the following API response:')
    print(api_data)
    sys.exit(0)
try:
    next(label for label in pull['labels'] if label.name == TRIVIAL_LABEL)
    print('The {} label found on the pull request, skipping check for '
          'changelog entries.'.format(TRIVIAL_LABEL))
    sys.exit(0)
except StopIteration:
    pass
# No trivial label added, make sure the changelog has been touched and
# that a LP bug has been attached to changelog entry.
content = requests.get(pull['diff_url']).text
has_changelog = False
bug_linked = False
bug_no = re.compile('^\+.*LP: \#\d+')
for line in content.splitlines():
    if not has_changelog:
        if line.startswith(
                'diff --git a/debian/changelog b/debian/changelog'):
            has_changelog = True
            continue
    elif line.startswith('diff --git '):
        break
    elif bug_no.match(line):
        bug_linked = True
assert has_changelog
assert bug_linked
